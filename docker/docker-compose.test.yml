services:
  app:
    depends_on:
      db:
        condition: service_healthy
    build: 
      context: ..
      dockerfile: ./build/Dockerfile.testApp
    command: ${CMD? CMD not set}
    container_name: theCompanyMarketTest
    hostname: theCompanyMarketTest
    networks:
      - ecommerce_default
    ports:
      - 5050:80
    environment:
      POSTGRES_USER: ${POSTGRES_USER? User not set}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD? Password not set} 
      POSTGRES_HOST: ${POSTGRES_HOST:-theCompanyMarketTestDB}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      POSTGRES_DB: ${POSTGRES_DB:-testDB} 


  db:
    build: 
      context: ..
      dockerfile: ./build/Dockerfile.testDB
      secrets:
        - "ps_user"
        - "ps_password"
        - "ps_db"
    env_file: ./.env.test
    command: -c fsync=off
    container_name: theCompanyMarketTestDB
    hostname: theCompanyMarketTestDB
    networks:
      - ecommerce_default
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -h localhost -U admin -d testDB"]
      interval: 1s
      timeout: 1s
      retries: 10

networks:
  ecommerce_default:
    driver: bridge

secrets:
  ps_user:
    environment: "POSTGRES_USER"
  ps_password:
    environment: "POSTGRES_PASSWORD"
  ps_db:
    environment: "POSTGRES_DB"
